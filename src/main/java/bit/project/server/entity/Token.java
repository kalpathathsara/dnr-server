/*
 * Generated By Spring Data JPA Entity Generator
 * @author Niroshan Mendis
 */

package bit.project.server.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.Data;
import lombok.NoArgsConstructor;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.time.LocalDateTime;
import java.util.List;

@Data
@Entity
@NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Token{

    @Id
    @NotNull(message="Id is required")
    @Size(min=36, max=36, message="Character count should be 36")
    private String id;

    @ManyToOne(optional=false)
    private User user;

    private LocalDateTime tocreation;

    private LocalDateTime toexpiration;

    @Size(min=0, max=100, message="Maximum character count is 100")
    private String ip;

    @Size(min=0, max=20, message="Maximum character count is 20")
    private String status;

    @JsonIgnore
    @OneToMany(mappedBy="token")
    private List<Servicelog> servicelogList;


    public Token(String id){
        this.id = id;
    }


}
