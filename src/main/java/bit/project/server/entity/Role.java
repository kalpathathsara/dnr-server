/*
 * Generated By Spring Data JPA Entity Generator
 * @author Niroshan Mendis
 */

package bit.project.server.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Data;
import lombok.NoArgsConstructor;

import jakarta.persistence.*;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.time.LocalDateTime;
import java.util.List;

@Data
@Entity
@NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Role{

    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    private Integer id;

    @ManyToOne(optional=false)
    @JsonProperty(access = JsonProperty.Access.READ_ONLY)
    private User creator;

    @NotNull(message = "Name is required")
    @Size(min=0, max=100, message="Maximum character count is 100")
    private String name;

    @JsonProperty(access = JsonProperty.Access.READ_ONLY)
    private LocalDateTime tocreation;

    @JsonIgnoreProperties({"roleList"})
    @ManyToMany(mappedBy="roleList")
    private List<User> userList;

    @Valid
    @ManyToMany
    @JsonIgnoreProperties({"roleList"})
    @JoinTable(
        name="roleusecase",
        joinColumns=@JoinColumn(name="role_id", referencedColumnName="id"),
        inverseJoinColumns=@JoinColumn(name="usecase_id", referencedColumnName="id")
    )
    private List<Usecase> usecaseList;


    public Role(Integer id){
        this.id = id;
    }

    public Role(Integer id, String name){
        this.id = id;
        this.name = name;
    }

}
